name: ci

on:
  push:
    branches:
      - "master"

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        include:
          - dockerfile: ./chat_bot/Dockerfile
            name: chat_bot
          - dockerfile: ./expire_script/Dockerfile
            name: expire_script
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ matrix.name }}:latest
  deploy:
    runs-on: ubuntu-20.04
    steps:
      -
        name: Deploy to Docker Host
        uses: wshihadeh/docker-deployment-action@v1
        with:
          remote_docker_host: ${{ secrets.HOSTNAME_PROD }}
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
          deployment_mode: docker-compose
          copy_stack_file: true
          deploy_path: /home/adslot
          stack_file_name: docker-compose.yml
          keep_files: 5
          args: up -d --env-file .env.prod
          docker_prune: 'false'
          pull_images_first: 'true'
#      -
#        name: Install SSH Key
#        uses: shimataro/ssh-keyaction@v2
#        with:
#          key: ${{ secrets.SSH_PUBLIC_KEY }}
#          name: id_rsa
#          known_hosts: ${{ secrets.KNOWN_HOSTS }}
#          config: ${{ secrets.CONFIG }} # ssh_config; optional
#          if_key_exists: fail # replace / ignore / fail; optional (defaults to fail)
#        - name: rsync over SSH
#          run: rsync -a -f '- /*/' ./ user@remote:/home/adslot/

#  redeploy:
#    name: Redeploy - Webhook call
#    runs-on: ubuntu-20.04
#    needs: [ build ]
#    steps:
#      - name: Deploy docker container webhook
#        uses: joelwmale/webhook-action@master
#        env:
#          WEBHOOK_URL: ${{ secrets.DEPLOY_WEBHOOK_URL  }}
#          data: "{ 'myField': 'myFieldValue'}"
